//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanAttacks.Properties.Translations {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Lang {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Lang() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LanAttacks.Properties.Translations.Lang", typeof(Lang).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Destination IP Address.
        /// </summary>
        public static string destinationIpAddress {
            get {
                return ResourceManager.GetString("destinationIpAddress", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Filter packets.
        /// </summary>
        public static string filterPackets {
            get {
                return ResourceManager.GetString("filterPackets", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Welcome to LanAttacks! LanAttacks is a pentesting software that allows you to test your Local Area Network. There are 3 different types of attacks:.
        /// </summary>
        public static string homeDescription {
            get {
                return ResourceManager.GetString("homeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Home.
        /// </summary>
        public static string homeTitle {
            get {
                return ResourceManager.GetString("homeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ICMP Flooding -  it involves sending a large number of Internet Control Message Protocol (ICMP) requests to a target device in order to disrupt its operation. Attackers send large amounts of ICMP packets, which can overload the network and cause system instability or failure..
        /// </summary>
        public static string icmpFloodingDescription {
            get {
                return ResourceManager.GetString("icmpFloodingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Language.
        /// </summary>
        public static string language {
            get {
                return ResourceManager.GetString("language", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Home.
        /// </summary>
        public static string navHome {
            get {
                return ResourceManager.GetString("navHome", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Network interface.
        /// </summary>
        public static string networkInterface {
            get {
                return ResourceManager.GetString("networkInterface", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Number of packets to search.
        /// </summary>
        public static string numOfPacketsToSearch {
            get {
                return ResourceManager.GetString("numOfPacketsToSearch", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Number of packets to send.
        /// </summary>
        public static string numOfPacketsToSend {
            get {
                return ResourceManager.GetString("numOfPacketsToSend", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Network protocol.
        /// </summary>
        public static string protocol {
            get {
                return ResourceManager.GetString("protocol", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Sniffing -  it refers to eavesdropping on network traffic in order to obtain sensitive information such as passwords, usernames, credit card numbers, etc. The attacker uses software to capture data packets transmitted on the network..
        /// </summary>
        public static string sniffingDescription {
            get {
                return ResourceManager.GetString("sniffingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Source IP Address.
        /// </summary>
        public static string sourceIpAddress {
            get {
                return ResourceManager.GetString("sourceIpAddress", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Spoofing -  it involves falsifying the source addresses of data packets to make it appear that they originate from different addresses than the actual ones. Attackers can use this technique to hide their identity or deceive network security systems..
        /// </summary>
        public static string spoofingDescription {
            get {
                return ResourceManager.GetString("spoofingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Start ICMP Flooding.
        /// </summary>
        public static string startICMPFlooding {
            get {
                return ResourceManager.GetString("startICMPFlooding", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Start Sniffing.
        /// </summary>
        public static string startSniffing {
            get {
                return ResourceManager.GetString("startSniffing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Start Spoofing.
        /// </summary>
        public static string startSpoofing {
            get {
                return ResourceManager.GetString("startSpoofing", resourceCulture);
            }
        }
    }
}
